/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.teacher;

import business.Enterprise.Enterprise;
import business.Organization.Organization;
import business.Organization.Community.TeacherOrganization;
import business.UserAccount.UserAccount;
import business.ecosystem.Ecosystem;
import business.person.Person;
import business.person.PersonDirectory;
import business.person.ProfessionalsProfile;
import business.utils.Validate;
import java.awt.CardLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ilanigam17
 */
public class AddTeacherJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private PersonDirectory personDir;
    private Ecosystem ecosystem;
    private UserAccount acc;
    private Enterprise enterprise;
    private Organization org;
    private ProfessionalsProfile tp;

    /**
     * Creates new form AddTeacherJPanel
     */
    public AddTeacherJPanel(JPanel userProcessContainer, Organization org, UserAccount acc, ProfessionalsProfile tp, Enterprise enterprise, Ecosystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.personDir = org.getPersonDirectory();
        this.acc = acc;
        this.ecosystem = ecosystem;
        this.enterprise = enterprise;
        this.org = org;
        this.tp = tp;
        personNameJTxt.setText(acc.getPerson().getName());
        continueJBtn.setVisible(false);
        updateJBtn.setVisible(false);
        if (this.tp != null) {
            populatePresentDetails();
            populateCourseValues(this.tp);
            populateSchedule(this.tp);
            updateJBtn.setVisible(true);
            addJBtn.setVisible(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        phNumJText = new javax.swing.JTextField();
        addJBtn = new javax.swing.JButton();
        townJText = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        zipJText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        emailJText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        stAddTextArea = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        personNameJTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        continueJBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        course1JCheckBox = new javax.swing.JCheckBox();
        course2JCheckBox = new javax.swing.JCheckBox();
        course3JCheckBox = new javax.swing.JCheckBox();
        course4JCheckBox = new javax.swing.JCheckBox();
        course5JCheckBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        day1JCheckBox = new javax.swing.JCheckBox();
        day2JCheckBox = new javax.swing.JCheckBox();
        day3JCheckBox = new javax.swing.JCheckBox();
        day4JCheckBox = new javax.swing.JCheckBox();
        day5JCheckBox = new javax.swing.JCheckBox();
        day6JCheckBox = new javax.swing.JCheckBox();
        day7JCheckBox = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        otherJTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        modeOfAppJCombo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        updateJBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Teacher Profile");

        addJBtn.setText("Add");
        addJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJBtnActionPerformed(evt);
            }
        });

        townJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                townJTextActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Phone Number");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Street address");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Town");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Name");

        emailJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailJTextActionPerformed(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(174, 96));

        stAddTextArea.setColumns(40);
        stAddTextArea.setRows(5);
        jScrollPane1.setViewportView(stAddTextArea);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Zip Code");

        personNameJTxt.setEditable(false);
        personNameJTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personNameJTxtActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Email Address");

        continueJBtn.setText("Continue>>");
        continueJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueJBtnActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(247, 252, 252));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Course Expertise", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel2.setText("Select Courses:");

        course1JCheckBox.setText("Java");

        course2JCheckBox.setText("C++");
        course2JCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course2JCheckBoxActionPerformed(evt);
            }
        });

        course3JCheckBox.setText("Python");

        course4JCheckBox.setText("Scala");

        course5JCheckBox.setText("Others");
        course5JCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course5JCheckBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Availability:");

        day1JCheckBox.setText("Monday");

        day2JCheckBox.setText("Tuesday");

        day3JCheckBox.setText("Wednesday");

        day4JCheckBox.setText("Thursday");

        day5JCheckBox.setText("Friday");
        day5JCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                day5JCheckBoxActionPerformed(evt);
            }
        });

        day6JCheckBox.setText("Saturday");

        day7JCheckBox.setText("Sunday");

        otherJTextArea.setColumns(20);
        otherJTextArea.setRows(5);
        otherJTextArea.setEnabled(false);
        otherJTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                otherJTextAreaKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(otherJTextArea);

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel4.setText("If \"Others\", Please specify course below:");

        modeOfAppJCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Complimentary", "Complimentary/Paid", "Paid Only" }));

        jLabel5.setText("Mode of Appointment:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(18, 18, 18)
                                            .addComponent(course1JCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(38, 38, 38)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(day2JCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(day1JCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(day3JCheckBox)))
                                        .addComponent(course4JCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(course3JCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(course5JCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(course2JCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(day6JCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(day5JCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(day4JCheckBox)
                                .addGap(34, 34, 34)
                                .addComponent(day7JCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(modeOfAppJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(course1JCheckBox)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(course2JCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(course3JCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(course4JCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(course5JCheckBox)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(day1JCheckBox)
                            .addComponent(day4JCheckBox)
                            .addComponent(day7JCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(day2JCheckBox)
                            .addComponent(day5JCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(day3JCheckBox)
                            .addComponent(day6JCheckBox)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modeOfAppJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        updateJBtn.setText("Update");
        updateJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel11)
                        .addComponent(jLabel10)
                        .addComponent(jLabel9)
                        .addComponent(jLabel15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addGap(143, 143, 143)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(phNumJText)
                                    .addComponent(emailJText)
                                    .addComponent(zipJText)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(townJText)
                                    .addComponent(personNameJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(continueJBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateJBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(addJBtn)
                            .addGap(4, 4, 4)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(152, 152, 152)))
                .addContainerGap(181, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel6))
                    .addComponent(personNameJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(townJText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zipJText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailJText, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(phNumJText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateJBtn)
                    .addComponent(addJBtn)
                    .addComponent(continueJBtn))
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJBtnActionPerformed

        String errMsg = "";
        errMsg = ValidateProfile();
        if (errMsg.toString().isEmpty() == true) {

            createNewProfile(acc.getPerson());
           // System.err.println("personProfile......." + acc.getPerson().getName());
            ProfessionalsProfile tp = ((TeacherOrganization) org).getTeacherDirectory().addTeacherProfile();
            createTeacherProfile(tp);

            JOptionPane.showMessageDialog(null, "Your profile has been updated " + personNameJTxt.getText(), "Congratulations!!", JOptionPane.INFORMATION_MESSAGE);
            continueJBtn.setVisible(true);
            addJBtn.setEnabled(false);
            updateJBtn.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(new JFrame(), errMsg.toString(), "Error Message",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_addJBtnActionPerformed

    public void createTeacherProfile(ProfessionalsProfile tp) {
        tp.setUserAccount(acc);
        retrieveCourseValues(tp);
        retrieveSchedule(tp);
        if (modeOfAppJCombo.getSelectedItem().equals("Paid")) {
            tp.setOnlyPaidMode(true);
        } else {
            tp.setOnlyPaidMode(false);
        }
     //   System.err.println("TeacherProfile..course....." + tp.getCourseExpertiseList().toString());
     //   System.err.println("TeacherProfile..schedule....." + tp.getScheduleList().toString());
    }

    public void retrieveSchedule(ProfessionalsProfile tp) {
        if (day1JCheckBox.isSelected()) {
            tp.addSchedule(day1JCheckBox.getText());
        }
        if (day2JCheckBox.isSelected()) {
            tp.addSchedule(day2JCheckBox.getText());
        }
        if (day3JCheckBox.isSelected()) {
            tp.addSchedule(day3JCheckBox.getText());
        }
        if (day4JCheckBox.isSelected()) {
            tp.addSchedule(day4JCheckBox.getText());
        }
        if (day5JCheckBox.isSelected()) {
            tp.addSchedule(day5JCheckBox.getText());
        }
        if (day6JCheckBox.isSelected()) {
            tp.addSchedule(day6JCheckBox.getText());
        }
        if (day7JCheckBox.isSelected()) {
            tp.addSchedule(day7JCheckBox.getText());
        }
    }

    public void retrieveCourseValues(ProfessionalsProfile tp) {
        if (course1JCheckBox.isSelected()) {
            tp.addCourseExpertise(course1JCheckBox.getText().toUpperCase());
        }
        if (course2JCheckBox.isSelected()) {
            tp.addCourseExpertise(course2JCheckBox.getText().toUpperCase());
        }
        if (course3JCheckBox.isSelected()) {
            tp.addCourseExpertise(course3JCheckBox.getText().toUpperCase());
        }
        if (course4JCheckBox.isSelected()) {
            tp.addCourseExpertise(course4JCheckBox.getText().toUpperCase());
        }
        if (course5JCheckBox.isSelected()) {
            tp.addCourseExpertise("(" + (otherJTextArea.getText()).toUpperCase() + ")");
        }

    }

    public String ValidateProfile() {

        String errMsg = new String();

        if (personNameJTxt.getText().isEmpty()) {
            errMsg = errMsg + "Name is manadatory\n";
        } else {
            if (!personNameJTxt.getText().matches("[a-zA-Z0-9 ]*")) {
                errMsg = errMsg + "Name is not a valid input\n";
            }
        }

//        if(idJText.getText().isEmpty()){
//            errMsg=errMsg+"ID is manadatory\n";
//         }else{
//           if(!idJText.getText().matches("[a-zA-Z0-9]*")){
//            errMsg=errMsg+"ID is not a valid input\n";
//           }
//        }
        if (stAddTextArea.getText().isEmpty()) {
            errMsg = errMsg + "Street Address is manadatory\n";
        } else {
            if (!stAddTextArea.getText().matches("[a-zA-Z_0-9# .-]*")) {
                errMsg = errMsg + "Street Address is not a valid input\n";
            }
        }

        if (townJText.getText().isEmpty()) {
            errMsg = errMsg + "Town is manadatory\n";
        } else {
            if (!townJText.getText().matches("[a-zA-Z_0-9]*")) {
                errMsg = errMsg + "Town is not a valid input\n";
            }
        }
        if (zipJText.getText().isEmpty()) {
            errMsg = errMsg + "Zipcode is manadatory\n";
        } else {
            if (!zipJText.getText().matches("[0-9]*")) {
                errMsg = errMsg + "Zipcode can only be integer\n";
            }
            if (!(zipJText.getText().length() == 5)) {
                errMsg = errMsg + "Zip Code should be 5 digits\n";
            }
        }
        if (emailJText.getText().isEmpty()) {
            errMsg = errMsg + "Email is manadatory\n";
        } else {
            if (!Validate.ValidateEmail(emailJText.getText(), null)) {
                errMsg = errMsg + "Email is not valid\n";
            }
        }

        if (phNumJText.getText().isEmpty()) {
            errMsg = errMsg + "Phone Number is manadatory\n";
        } else {
            if (!phNumJText.getText().matches("[0-9]*")) {
                errMsg = errMsg + "Phone number is integer only\n";
            }
            if (!(phNumJText.getText().length() == 10)) {
                errMsg = errMsg + "Phone number should be 10 digits\n";
            }
        }

        if (course5JCheckBox.isSelected()) {
            if (!Validate.ValidateEmpty(otherJTextArea.getText(), null)) {
                errMsg = errMsg + "Please specify your expertise in area available\n";
            }
        }

        if (!course1JCheckBox.isSelected() && !course2JCheckBox.isSelected() && !course3JCheckBox.isSelected() && !course4JCheckBox.isSelected() && !course5JCheckBox.isSelected()) {
            errMsg = errMsg + "Please specify your Course expertise\n";
        }

        if (!day1JCheckBox.isSelected() && !day2JCheckBox.isSelected() && !day3JCheckBox.isSelected() && !day4JCheckBox.isSelected() && !day5JCheckBox.isSelected() && !day6JCheckBox.isSelected() && !day7JCheckBox.isSelected()) {
            errMsg = errMsg + "Atleast one day of availability is manadatory\n";
        }

        return errMsg;
    }

    public void createNewProfile(Person person) {
        person.setName(personNameJTxt.getText());
        person.setStAddress(stAddTextArea.getText());
        person.setEmailId(emailJText.getText());
        person.setTown(townJText.getText());
        person.setZipCode(Integer.valueOf(zipJText.getText()));
        person.setPhoneNum(Long.valueOf(phNumJText.getText()));

    }
    private void townJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_townJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_townJTextActionPerformed

    private void emailJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailJTextActionPerformed

    private void personNameJTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personNameJTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_personNameJTxtActionPerformed

    private void continueJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueJBtnActionPerformed
        TeacherEntryWorkAreaJPanel teacherEntryWorkAreaJPanel = new TeacherEntryWorkAreaJPanel(userProcessContainer, acc, org, enterprise, ecosystem);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("teacherHelpOfferingPortal", teacherEntryWorkAreaJPanel);
        layout.next(userProcessContainer);
    }//GEN-LAST:event_continueJBtnActionPerformed

    private void course2JCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course2JCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_course2JCheckBoxActionPerformed

    private void course5JCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course5JCheckBoxActionPerformed
        // TODO add your handling code here:
        otherJTextArea.setEnabled(true);
    }//GEN-LAST:event_course5JCheckBoxActionPerformed

    private void day5JCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_day5JCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_day5JCheckBoxActionPerformed

    private void otherJTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_otherJTextAreaKeyTyped
        // TODO add your handling code here:
        otherJTextArea.setText(otherJTextArea.getText().toUpperCase());
    }//GEN-LAST:event_otherJTextAreaKeyTyped

    private void updateJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJBtnActionPerformed
        String errMsg = "";
        continueJBtn.setVisible(true);
        errMsg = ValidateProfile();
        if (errMsg.toString().isEmpty() == true) {
            createNewProfile(acc.getPerson());
            createTeacherProfile(tp);
            JOptionPane.showMessageDialog(null, "Your profile has been updated " + personNameJTxt.getText(), "Congratulations!!", JOptionPane.INFORMATION_MESSAGE);

            addJBtn.setEnabled(false);
            updateJBtn.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(new JFrame(), errMsg.toString(), "Error Message",
                    JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_updateJBtnActionPerformed

    public void populatePresentDetails() {
        personNameJTxt.setText(acc.getPerson().getName());
        stAddTextArea.setText(acc.getPerson().getStAddress());
        emailJText.setText(acc.getPerson().getEmailId());
        townJText.setText(acc.getPerson().getTown());
        zipJText.setText(String.valueOf(acc.getPerson().getZipCode()));
        phNumJText.setText(String.valueOf(acc.getPerson().getPhoneNum()));
    }

    public void populateSchedule(ProfessionalsProfile tp) {

        if (this.tp.getScheduleList().toString().contains("Monday")) {
            day1JCheckBox.doClick();
        }
        if (this.tp.getScheduleList().toString().contains("Tuesday")) {
            day2JCheckBox.doClick();
        }
        if (this.tp.getScheduleList().toString().contains("Wednesday")) {
            day3JCheckBox.doClick();
        }
        if (this.tp.getScheduleList().toString().contains("Thursday")) {
            day4JCheckBox.doClick();
        }
        if (this.tp.getScheduleList().toString().contains("Friday")) {
            day5JCheckBox.doClick();
        }
        if (this.tp.getScheduleList().toString().contains("Saturday")) {
            day6JCheckBox.doClick();
        }
        if (this.tp.getScheduleList().toString().contains("Sunday")) {
            day7JCheckBox.doClick();
        }
    }

    public void populateCourseValues(ProfessionalsProfile tp) {
        // System.out.println("Inside populateCourseValues........");
        if (this.tp.getCourseExpertiseList().toString().contains(course1JCheckBox.getText().toUpperCase())) {
            course1JCheckBox.doClick();
        }
        if (this.tp.getCourseExpertiseList().toString().contains(course2JCheckBox.getText().toUpperCase())) {
            course2JCheckBox.doClick();
        }
        if (this.tp.getCourseExpertiseList().toString().contains(course3JCheckBox.getText().toUpperCase())) {
            course3JCheckBox.doClick();
        }
        if (this.tp.getCourseExpertiseList().toString().contains(course4JCheckBox.getText().toUpperCase())) {
            course4JCheckBox.doClick();
        }
        if (this.tp.getCourseExpertiseList().toString().contains("(")) {
            String otherData[] = this.tp.getCourseExpertiseList().toString().split("\\(");
            otherData = otherData[1].split("\\)");
            otherJTextArea.setText(otherData[0]);

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJBtn;
    private javax.swing.JButton continueJBtn;
    private javax.swing.JCheckBox course1JCheckBox;
    private javax.swing.JCheckBox course2JCheckBox;
    private javax.swing.JCheckBox course3JCheckBox;
    private javax.swing.JCheckBox course4JCheckBox;
    private javax.swing.JCheckBox course5JCheckBox;
    private javax.swing.JCheckBox day1JCheckBox;
    private javax.swing.JCheckBox day2JCheckBox;
    private javax.swing.JCheckBox day3JCheckBox;
    private javax.swing.JCheckBox day4JCheckBox;
    private javax.swing.JCheckBox day5JCheckBox;
    private javax.swing.JCheckBox day6JCheckBox;
    private javax.swing.JCheckBox day7JCheckBox;
    private javax.swing.JTextField emailJText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox modeOfAppJCombo;
    private javax.swing.JTextArea otherJTextArea;
    private javax.swing.JTextField personNameJTxt;
    private javax.swing.JTextField phNumJText;
    private javax.swing.JTextArea stAddTextArea;
    private javax.swing.JTextField townJText;
    private javax.swing.JButton updateJBtn;
    private javax.swing.JTextField zipJText;
    // End of variables declaration//GEN-END:variables
}
