/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.organisation;

import business.Enterprise.CommunityEnterprise;
import business.Enterprise.Enterprise;
import business.Enterprise.FinancialEnterprise;
import business.Organization.Community.DoctorOrganization;
import business.Organization.Organization;
import business.Organization.OrganizationDirectory;
import business.Organization.Community.StudentOrganization;
import business.Organization.Community.TeacherOrganization;
import business.Organization.Finance.AcademicFinOrganization;
import business.Organization.Finance.SanctionManagerFinOrganization;
import business.Role.StudentRole;
import business.UserAccount.UserAccount;
import business.person.Person;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ilanigam17
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise ent;
    private OrganizationDirectory organizationDir;
    private UserAccount entUserAcc;

    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageOrganizationJPanel(JPanel userProcessContainer, Enterprise ent, UserAccount entUserAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ent = ent;
        this.organizationDir = ent.getOrganizationDirectory();
        this.entUserAcc = entUserAcc;

        populateOrganizationTable();
        populateOrgTypeCombox();
    }

    public void populateOrgTypeCombox() {
        organizationJComboBox.removeAllItems();
        organizationJComboBox.addItem("");
        if (ent instanceof CommunityEnterprise) {
            for (Organization.CommunityOrgType type : Organization.CommunityOrgType.values()) {
                if (!type.getValue().equals(Organization.CommunityOrgType.Admin.getValue())) {
                    organizationJComboBox.addItem(type);
                }

            }
        } else if (ent instanceof FinancialEnterprise) {
            for (Organization.FinancialOrgType type : Organization.FinancialOrgType.values()) {
                if (!type.getValue().equals(Organization.FinancialOrgType.Admin.getValue())) {
                    organizationJComboBox.addItem(type);
                }
            }
        }
    }

    public void populateOrganizationTable() {
        DefaultTableModel dtm = (DefaultTableModel) organizationJTable.getModel();
        dtm.setRowCount(0);
        Object row[] = new Object[2];
        for (Organization org : organizationDir.getOrganizationList()) {
            if (org != null) {
                row[1] = org.getName();
                row[0] = org.getOrganizationID();

                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        orgNameJtxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        createOrgJBtn = new javax.swing.JButton();
        backJBtn = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Manage Organization");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Create Organization:");

        jLabel3.setText("Name of Organization:");

        createOrgJBtn.setText("Create");
        createOrgJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createOrgJBtnActionPerformed(evt);
            }
        });

        backJBtn.setText("<<Back");
        backJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtnActionPerformed(evt);
            }
        });

        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("Organization Type ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel1))
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJBtn)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(35, 35, 35)
                                .addComponent(organizationJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(orgNameJtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(45, 45, 45)
                        .addComponent(createOrgJBtn)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orgNameJtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(createOrgJBtn))
                .addGap(44, 44, 44)
                .addComponent(backJBtn)
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createOrgJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createOrgJBtnActionPerformed
        // TODO add your handling code here:
        if (organizationJComboBox.getSelectedItem() != null) {
            Boolean alreadyThere = false;
            if (ent instanceof CommunityEnterprise) {
                if (organizationJComboBox.getSelectedItem() == Organization.CommunityOrgType.Doctor) {
                    for (Organization organization : organizationDir.getOrganizationList()) {
                        if (organization instanceof DoctorOrganization) {
                            alreadyThere = true;
                            break;
                        }
                    }
                    if (alreadyThere == false) {
                        Organization org = new DoctorOrganization();
                        organizationDir.getOrganizationList().add(org);
                    }
                } else if (organizationJComboBox.getSelectedItem() == Organization.CommunityOrgType.Student) {
                    for (Organization organization : organizationDir.getOrganizationList()) {
                        if (organization instanceof StudentOrganization) {
                            alreadyThere = true;
                            break;
                        }
                    }
                    if (alreadyThere == false) {

                        Organization org = new StudentOrganization();
                        Person person = org.getPersonDirectory().addPerson();
                        person.setName("studentAdmin");
                        org.getUserAccountDirectory().createUserAccount("student", "student", person, new StudentRole());
                        organizationDir.getOrganizationList().add(org);
                    } else {
                        JOptionPane.showMessageDialog(null, "Already present!");
                    }
                } else if (organizationJComboBox.getSelectedItem() == Organization.CommunityOrgType.Teacher) {
                    for (Organization organization : organizationDir.getOrganizationList()) {
                        if (organization instanceof TeacherOrganization) {
                            alreadyThere = true;
                            break;
                        }
                    }
                    if (alreadyThere == false) {
                        Organization org = new TeacherOrganization();
                        organizationDir.getOrganizationList().add(org);
                    }
                }
            } else if (ent instanceof FinancialEnterprise) {
                if (organizationJComboBox.getSelectedItem() == Organization.FinancialOrgType.Academic) {
                    for (Organization organization : organizationDir.getOrganizationList()) {
                        if (organization instanceof AcademicFinOrganization) {
                            alreadyThere = true;
                            break;
                        }
                    }
                    if (alreadyThere == false) {
                        Organization org = new AcademicFinOrganization();
                        organizationDir.getOrganizationList().add(org);
                    }
                } else if (organizationJComboBox.getSelectedItem() == Organization.FinancialOrgType.Sanction) {
                    for (Organization organization : organizationDir.getOrganizationList()) {
                        if (organization instanceof SanctionManagerFinOrganization) {
                            alreadyThere = true;
                            break;
                        }
                    }
                    if (alreadyThere == false) {
                        Organization org = new SanctionManagerFinOrganization();
                        organizationDir.getOrganizationList().add(org);
                    }
                }

            }

//end of if community ent check    
            populateOrganizationTable();
            orgNameJtxt.setText("");
            populateOrgTypeCombox();

        } else {
            JOptionPane.showMessageDialog(null, "Please enter Organization name!");
        }
    }//GEN-LAST:event_createOrgJBtnActionPerformed

    private void backJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJBtnActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        // TODO add your handling code here:
        if (organizationJComboBox.getSelectedItem() != null && organizationJComboBox.getSelectedItem() != "") {
            orgNameJtxt.setText(organizationJComboBox.getSelectedItem() + " Organization");
            orgNameJtxt.setEditable(false);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJBtn;
    private javax.swing.JButton createOrgJBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField orgNameJtxt;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    // End of variables declaration//GEN-END:variables
}
