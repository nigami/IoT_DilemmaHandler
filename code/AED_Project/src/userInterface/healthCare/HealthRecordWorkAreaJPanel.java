/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.healthCare;

import business.Enterprise.Enterprise;
import business.UserAccount.UserAccount;
import business.ecosystem.Ecosystem;
import com.teamdev.jxbrowser.chromium.Browser;
import com.teamdev.jxbrowser.chromium.swing.BrowserView;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import userInterface.badMoodDay.StudentSanctionFinanceJPanel;
import static userInterface.doctor.DoctorProcessWorkRequestJPanel.MAX_ZOOM;
import static userInterface.doctor.DoctorProcessWorkRequestJPanel.MIN_ZOOM;

/**
 *
 * @author ilanigam17
 */
public class HealthRecordWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount acc;
    private Ecosystem ecosystem;
    private Boolean fromMoodPanel;
    private Enterprise enterprise;
    public static final int MIN_ZOOM = 0;
    public static final int MAX_ZOOM = 21;
    private static int zoomValue = 4;

    /**
     * Creates new form HealthRecordWorkAreaJPanel
     */
    public HealthRecordWorkAreaJPanel(JPanel userProcessContainer, UserAccount acc, Enterprise enterprise, Ecosystem ecosystem, Boolean fromMoodPanel) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.acc = acc;
        this.ecosystem = ecosystem;
        this.fromMoodPanel = fromMoodPanel;
        this.enterprise = enterprise;
        //info1Label.setVisible(false);
        //consultDoctorJBtn.setVisible(false);

        ////if(fromMoodPanel){
        //    info1Label.setVisible(true);
        //    consultDoctorJBtn.setVisible(true);
        //}
        if (acc.getPerson().getPatient() != null) {
            addVitalJBtn.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        healthHistoryJBtn = new javax.swing.JButton();
        addVitalJBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        info1Label = new javax.swing.JLabel();
        consultDoctorJBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        healthHistoryJBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        healthHistoryJBtn.setText("View your health history");
        healthHistoryJBtn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                healthHistoryJBtnFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                healthHistoryJBtnFocusLost(evt);
            }
        });
        healthHistoryJBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                healthHistoryJBtnMouseClicked(evt);
            }
        });
        healthHistoryJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                healthHistoryJBtnActionPerformed(evt);
            }
        });

        addVitalJBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addVitalJBtn.setText("Add Vital Information");
        addVitalJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVitalJBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Manage Health Records");

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        info1Label.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        info1Label.setForeground(new java.awt.Color(0, 0, 204));
        info1Label.setText("Please click to update vital information first:");

        consultDoctorJBtn.setBackground(new java.awt.Color(255, 204, 102));
        consultDoctorJBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        consultDoctorJBtn.setForeground(new java.awt.Color(0, 102, 102));
        consultDoctorJBtn.setText("Consult Doctor!");
        consultDoctorJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultDoctorJBtnActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 204, 102));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Symptoms research");
        jButton2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton2FocusLost(evt);
            }
        });
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(info1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addVitalJBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(healthHistoryJBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(consultDoctorJBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addComponent(info1Label)
                .addGap(18, 18, 18)
                .addComponent(addVitalJBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(healthHistoryJBtn)
                .addGap(32, 32, 32)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(consultDoctorJBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addGap(94, 94, 94))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void healthHistoryJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_healthHistoryJBtnActionPerformed
        // TODO add your handling code here:
        if (acc.getPerson().getPatient() != null) {
            CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
            ManagePatientJPanel managePatientJPanel = new ManagePatientJPanel(acc, enterprise, acc.getPerson().getPatient(), userProcessContainer);
            userProcessContainer.add("managePatientJPanel", managePatientJPanel);
            crdLyt.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Your Healthcare profile doesnot have any records!");
        }

        ///if(fromMoodPanel){
        //    consultDoctorJBtn.setVisible(true);
        //}
    }//GEN-LAST:event_healthHistoryJBtnActionPerformed

    public void returnBack() {
        JOptionPane.showMessageDialog(null, "If you want to get doctor's opinion, Please press: 'Consult Doctor'");
    }

    private void addVitalJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVitalJBtnActionPerformed
        // TODO add your handling code here:
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        CreatePatientJPanel createPatientJPanel = new CreatePatientJPanel(this.acc, enterprise, this.acc.getPerson(), userProcessContainer);
        userProcessContainer.add("createPatientJPanel", createPatientJPanel);
        crdLyt.next(userProcessContainer);
        addVitalJBtn.setEnabled(false);
        consultDoctorJBtn.setVisible(true);
    }//GEN-LAST:event_addVitalJBtnActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void healthHistoryJBtnFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_healthHistoryJBtnFocusGained
        // TODO add your handling code here:
        healthHistoryJBtn.setBackground(Color.YELLOW);
    }//GEN-LAST:event_healthHistoryJBtnFocusGained

    private void healthHistoryJBtnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_healthHistoryJBtnFocusLost
        // TODO add your handling code here:
        healthHistoryJBtn.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_healthHistoryJBtnFocusLost

    private void consultDoctorJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultDoctorJBtnActionPerformed
        // TODO add your handling code here:
        HealthIssueRequestJPanel healthIssueRequestJPanel = new HealthIssueRequestJPanel(userProcessContainer, acc, enterprise, ecosystem);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("healthIssueRequestJPanel", healthIssueRequestJPanel);
        layout.next(userProcessContainer);
    }//GEN-LAST:event_consultDoctorJBtnActionPerformed

    private void jButton2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton2FocusGained
        // TODO add your handling code here:
        jButton2.setBackground(Color.yellow);
    }//GEN-LAST:event_jButton2FocusGained

    private void jButton2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton2FocusLost
        // TODO add your handling code here:
        jButton2.setBackground(Color.lightGray);
    }//GEN-LAST:event_jButton2FocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        final Browser browser = new Browser();

        BrowserView browserView = new BrowserView(browser);

        JPanel toolBar = new JPanel();
        JTextField inputSymptoms = new JTextField("Please enter symptons here");

        inputSymptoms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputSymptoms.setText(" ");
            }
        });

        JButton zoomOutButton = new JButton("Search Symptoms");
        zoomOutButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                browser.loadURL("http://search.medicinenet.com/search/search_results/default.aspx?Searchwhat=1&query=" + inputSymptoms.getText());
            }
        });

        JButton zoomInButton = new JButton("Back");
        zoomInButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                browser.loadURL("http://search.medicinenet.com/search/search_results/default.aspx?Searchwhat=1&query=" + inputSymptoms.getText());
            }
        });

        toolBar.add(zoomOutButton);
        toolBar.add(inputSymptoms);
        //toolBar.add(backJButton);
        toolBar.add(zoomInButton);

        JFrame frame = new JFrame();
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.add(toolBar, BorderLayout.SOUTH);
        frame.add(browserView, BorderLayout.CENTER);
        frame.setSize(900, 500);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);

        //    JButton backButton = new JButton("<< Back");
        zoomInButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {

                frame.dispose();
            }
        });

        browser.loadURL("http://www.mayoclinic.org/symptom-checker/select-symptom/itt-20009075");

    }//GEN-LAST:event_jButton2ActionPerformed

    private void healthHistoryJBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_healthHistoryJBtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_healthHistoryJBtnMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addVitalJBtn;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton consultDoctorJBtn;
    private javax.swing.JButton healthHistoryJBtn;
    private javax.swing.JLabel info1Label;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
