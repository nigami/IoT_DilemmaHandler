/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.healthCare;

import business.Enterprise.Enterprise;
import business.UserAccount.UserAccount;
import business.patient.Patient;
import business.patient.VitalSignHistory;
import business.patient.VitalSignInfo;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author ilanigam17
 */
public class ManagePatientJPanel extends javax.swing.JPanel {

    private Patient patient;
    private JPanel userProcessContainer;
    private UserAccount account;
    private Enterprise enterprise;

    /**
     * Creates new form ManagePatientJPanel
     */
    public ManagePatientJPanel(UserAccount account, Enterprise enterprise, Patient patient, JPanel userProcessContainer) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        this.account = account;
        this.enterprise = enterprise;
        //  nameJTextField.setText(patient.getName());
        //  idJTextField.setText(patient.getId());
        if (patient != null) {
            populateRec();
        }
        resetFields();
        colorTableCells();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        weightJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        respRateJTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        normRespJTextField = new javax.swing.JTextField();
        normHeartJTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewPatientJTable = new javax.swing.JTable(){
            public Component prepareRenderer(TableCellRenderer r,int row, int col){
                Component c = super.prepareRenderer(r,row,col);
                c.setBackground(Color.WHITE);
                col = 1;
                if(getModel().getValueAt(row,col).equals("Abnormal")){
                    c.setBackground(Color.RED);
                }

                if(getModel().getValueAt(row,col).equals("Normal")){
                    c.setBackground(Color.GREEN);
                }

                return c;
            }

        };
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        viewVitalInfoJButton = new javax.swing.JButton();
        heartRateJTextField = new javax.swing.JTextField();
        sysBPJTextField = new javax.swing.JTextField();
        normSBPJTextField = new javax.swing.JTextField();
        normWeightJTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        idJTextField = new javax.swing.JTextField();
        ageJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        addVitalJButton = new javax.swing.JButton();
        updateVitalJButton = new javax.swing.JButton();
        savePatientJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        weightJTextField.setEnabled(false);
        weightJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightJTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Respiratory Rate");

        jLabel3.setText("Heart Rate");

        jLabel4.setText("Systolic Blood Pressure");

        jLabel5.setText("Weight(In pounds)");

        respRateJTextField.setEnabled(false);
        respRateJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                respRateJTextFieldActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Patient readings");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Normal readings");

        normRespJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normRespJTextFieldActionPerformed(evt);
            }
        });

        viewPatientJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Time Stamp", "Patient Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewPatientJTable);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Patient Vital History:");

        jLabel14.setText("Patient Name");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("View Patient History");

        viewVitalInfoJButton.setText("View");
        viewVitalInfoJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewVitalInfoJButtonActionPerformed(evt);
            }
        });

        heartRateJTextField.setEnabled(false);

        sysBPJTextField.setEnabled(false);

        normSBPJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normSBPJTextFieldActionPerformed(evt);
            }
        });

        jLabel9.setText("ID");

        jLabel10.setText("Age");

        nameJTextField.setEditable(false);
        nameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameJTextFieldActionPerformed(evt);
            }
        });

        idJTextField.setEditable(false);
        idJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idJTextFieldActionPerformed(evt);
            }
        });

        ageJTextField.setEnabled(false);

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        addVitalJButton.setText("Add VitalInfo");
        addVitalJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVitalJButtonActionPerformed(evt);
            }
        });

        updateVitalJButton.setText("Update vital history");
        updateVitalJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateVitalJButtonActionPerformed(evt);
            }
        });

        savePatientJButton.setText("Save changes");
        savePatientJButton.setEnabled(false);
        savePatientJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePatientJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jLabel1))
                    .addComponent(jLabel13)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addVitalJButton)
                                .addGap(18, 18, 18)
                                .addComponent(viewVitalInfoJButton))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(backJButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(savePatientJButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(updateVitalJButton))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 206, Short.MAX_VALUE)
                                            .addComponent(sysBPJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(heartRateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(respRateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(weightJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGap(64, 64, 64)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(normWeightJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(normSBPJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(normHeartJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(normRespJTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel8)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(idJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ageJTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nameJTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(79, 79, 79)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(30, 30, 30)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewVitalInfoJButton)
                    .addComponent(addVitalJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(respRateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(normRespJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(heartRateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(normHeartJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sysBPJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(normSBPJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(weightJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(normWeightJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(updateVitalJButton)
                    .addComponent(savePatientJButton))
                .addContainerGap(60, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void weightJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_weightJTextFieldActionPerformed

    private void respRateJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_respRateJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_respRateJTextFieldActionPerformed

    private void normRespJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normRespJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normRespJTextFieldActionPerformed
    public void colorTableCells() {

    }

    public void populateRec() {

        nameJTextField.setText(patient.getName());
        idJTextField.setText(patient.getId());
        ageJTextField.setText(String.valueOf(patient.getAge()));

        DefaultTableModel dtm = (DefaultTableModel) viewPatientJTable.getModel();
        int rowCount = viewPatientJTable.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);//you can delete or add row in Jtable using model only
        }

        VitalSignHistory vitalHistory = patient.getVitalHistory();
        for (VitalSignInfo vi : vitalHistory.getVitalHistory()) {
            Object row[] = new Object[2];
            row[0] = vi;
            //System.err.println("vi.........."+vi.getRespRate());
            row[1] = patient.deriveStatus(vi);
            dtm.addRow(row);
        }
    }

    public void resetFields() {
        respRateJTextField.setText("");
        heartRateJTextField.setText("");
        sysBPJTextField.setText("");
        weightJTextField.setText("");

    }

    private void viewVitalInfoJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewVitalInfoJButtonActionPerformed
        // TODO add your handling code here:

        resetFields();

        int selectedRow = viewPatientJTable.getSelectedRow();
        if (selectedRow >= 0) {
            VitalSignInfo vi = (VitalSignInfo) viewPatientJTable.getValueAt(selectedRow, 0);
            respRateJTextField.setText(String.valueOf(vi.getRespRate()));
            heartRateJTextField.setText(String.valueOf(vi.getHeartRate()));
            sysBPJTextField.setText(String.valueOf(vi.getSystolicBP()));
            weightJTextField.setText(String.valueOf(vi.getWeight()));
            displayBGColour(vi);
            displayNormValues();
        }
    }//GEN-LAST:event_viewVitalInfoJButtonActionPerformed

    public void displayBGColour(VitalSignInfo vi) {
        int age = patient.getAge();
        float respRate = vi.getRespRate();
        float heartRate = vi.getHeartRate();
        float sysBPRate = vi.getSystolicBP();
        float weight = vi.getWeight();

        if ((age > 0 && age < 13 && respRate >= 20 && respRate <= 30)
                || (age > 13 && respRate >= 12 && respRate <= 20)) {
            normRespJTextField.setBackground(Color.green);
        } else {
            normRespJTextField.setBackground(Color.red);
        }

        if ((age >= 1 && age <= 3 && heartRate > 79 && heartRate < 131)
                || (age >= 4 && age <= 5 && heartRate > 79 && heartRate < 121)
                || (age >= 6 && age <= 12 && heartRate > 69 && heartRate < 111)
                || (age >= 13 && heartRate > 54 && heartRate < 106)) {
            normHeartJTextField.setBackground(Color.green);
        } else {
            normHeartJTextField.setBackground(Color.red);
        }

        if ((age > 0 && age < 6 && sysBPRate > 79 && sysBPRate < 111)
                || (age > 5 && age < 13 && sysBPRate > 79 && sysBPRate < 121)
                || (age > 12 && sysBPRate > 109 && sysBPRate < 121)) {
            normSBPJTextField.setBackground(Color.green);
        } else {
            normSBPJTextField.setBackground(Color.red);
        }

        if ((age > 0 && age < 4 && weight > 21 && weight < 32)
                || (age > 3 && age < 6 && weight > 30 && weight < 41)
                || (age > 5 && age < 13 && weight > 40 && weight < 93)
                || (age > 12 && weight > 110)) {
            normWeightJTextField.setBackground(Color.green);
        } else {
            normWeightJTextField.setBackground(Color.red);
        }
    }

    public void displayNormValues() {
        if (patient.getAge() >= 1 && patient.getAge() <= 3) {
            normRespJTextField.setText("20-30");
            normHeartJTextField.setText("80-130");
            normSBPJTextField.setText("80-110");
            normWeightJTextField.setText("22-31");
        }
        if (patient.getAge() >= 4 && patient.getAge() <= 5) {
            normRespJTextField.setText("20-30");
            normHeartJTextField.setText("80-120");
            normSBPJTextField.setText("80-110");
            normWeightJTextField.setText("31-40");
        }
        if (patient.getAge() >= 6 && patient.getAge() <= 12) {
            normRespJTextField.setText("20-30");
            normHeartJTextField.setText("70-110");
            normSBPJTextField.setText("80-120");
            normWeightJTextField.setText("41-92");
        }
        if (patient.getAge() >= 13) {
            normRespJTextField.setText("12-20");
            normHeartJTextField.setText("55-105");
            normSBPJTextField.setText("110-120");
            normWeightJTextField.setText(">110");
        }
    }
    private void nameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameJTextFieldActionPerformed

    private void idJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idJTextFieldActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void addVitalJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVitalJButtonActionPerformed
        // TODO add your handling code here:
        ManagePatientVitalInfoJPanel addVitalInfoJPanel = new ManagePatientVitalInfoJPanel(account, enterprise, patient, userProcessContainer);
        userProcessContainer.add("ManagePatientVitalInfoJPanel", addVitalInfoJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addVitalJButtonActionPerformed

    private void updateVitalJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateVitalJButtonActionPerformed
        // TODO add your handling code here:
        ageJTextField.setEnabled(true);

        savePatientJButton.setEnabled(true);

        int selectedRow = viewPatientJTable.getSelectedRow();
      //  System.err.println(".................>" + selectedRow);
        if (selectedRow >= 0) {
            respRateJTextField.setEnabled(true);
            heartRateJTextField.setEnabled(true);
            sysBPJTextField.setEnabled(true);
            weightJTextField.setEnabled(true);
        }
    }//GEN-LAST:event_updateVitalJButtonActionPerformed

    private void savePatientJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePatientJButtonActionPerformed
        // TODO add your handling code here:
        createPatientRec();
        int selectedRow = viewPatientJTable.getSelectedRow();
     //   System.err.println(".................>" + selectedRow);
        if (selectedRow >= 0) {
            createPatientVitalInfo((VitalSignInfo) viewPatientJTable.getValueAt(selectedRow, 0));
            ageJTextField.setEnabled(false);

            savePatientJButton.setEnabled(false);
            respRateJTextField.setEnabled(false);
            heartRateJTextField.setEnabled(false);
            sysBPJTextField.setEnabled(false);
            weightJTextField.setEnabled(false);
            populateRec();
            if (!respRateJTextField.getText().isEmpty()) {
                displayNormValues();
            }

        }
        displayBGColour((VitalSignInfo) viewPatientJTable.getValueAt(selectedRow, 0));
    }//GEN-LAST:event_savePatientJButtonActionPerformed

    private void normSBPJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normSBPJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normSBPJTextFieldActionPerformed

    public void createPatientVitalInfo(VitalSignInfo vitalInfo) {
        VitalSignInfo vi = vitalInfo;
        try {
            vi.setRespRate(Float.parseFloat(respRateJTextField.getText().trim()));
            vi.setHeartRate(Float.parseFloat(heartRateJTextField.getText().trim()));
            vi.setSystolicBP(Float.parseFloat(sysBPJTextField.getText().trim()));
            vi.setWeight(Float.parseFloat(weightJTextField.getText().trim()));
        } catch (Exception e) {
            // JOptionPane.showMessageDialog(null, "Only patient information is saved", "Vital info update abort!", JOptionPane.INFORMATION_MESSAGE);
        }
        DateFormat df = new SimpleDateFormat("dd/MM/yy HH:mm:ss");
        Date dateobj = new Date();
        vi.setCurrentTime(df.format(dateobj));
    }

    public void createPatientRec() {

        patient.setAge(Integer.parseInt(ageJTextField.getText().trim()));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addVitalJButton;
    private javax.swing.JTextField ageJTextField;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField heartRateJTextField;
    private javax.swing.JTextField idJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JTextField normHeartJTextField;
    private javax.swing.JTextField normRespJTextField;
    private javax.swing.JTextField normSBPJTextField;
    private javax.swing.JTextField normWeightJTextField;
    private javax.swing.JTextField respRateJTextField;
    private javax.swing.JButton savePatientJButton;
    private javax.swing.JTextField sysBPJTextField;
    private javax.swing.JButton updateVitalJButton;
    private javax.swing.JTable viewPatientJTable;
    private javax.swing.JButton viewVitalInfoJButton;
    private javax.swing.JTextField weightJTextField;
    // End of variables declaration//GEN-END:variables
}
