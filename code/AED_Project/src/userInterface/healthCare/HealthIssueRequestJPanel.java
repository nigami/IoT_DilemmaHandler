/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.healthCare;

import business.Enterprise.Enterprise;
import business.Organization.Community.DoctorOrganization;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import business.WorkQueue.PersonalHealthIssueWorkRequest;
import business.WorkQueue.WorkRequest;
import business.ecosystem.Ecosystem;
import business.patient.VitalSignHistory;
import business.patient.VitalSignInfo;
import java.awt.CardLayout;
import java.io.File;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ilanigam17
 */
public class HealthIssueRequestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount account;
    private Ecosystem system;
    private Enterprise enterprise;
    private ArrayList<File> fileList;

    /**
     * Creates new form HealthIssueRequestJPanel
     */
    public HealthIssueRequestJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Ecosystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.system = system;
        this.enterprise = enterprise;
        this.fileList = new ArrayList<>();
        populateRequestTable();
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
            if (request instanceof PersonalHealthIssueWorkRequest) {
                Object[] row = new Object[8];
                row[0] = ((PersonalHealthIssueWorkRequest) request);
                row[1] = request.getRequestDate();
                row[2] = request.getMessage();
                row[3] = ((PersonalHealthIssueWorkRequest) request).getUploadList();
                row[4] = request.getReceiver();
                row[5] = request.getStatus();
                String result = ((PersonalHealthIssueWorkRequest) request).getTestResult();
                row[6] = result == null ? "Waiting" : result;
                row[7] = (request.getResolveDate() == null) ? "" : request.getResolveDate();

                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        attachJBtn = new javax.swing.JButton();
        fileNameJTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        issueDescjTxtArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        submitReqJBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        messageJTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        backJButton1 = new javax.swing.JButton();
        resetJBtn = new javax.swing.JButton();
        viewResult = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        attachJBtn.setText("Attach");
        attachJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attachJBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Issue brief description:");

        issueDescjTxtArea.setColumns(20);
        issueDescjTxtArea.setRows(5);
        jScrollPane1.setViewportView(issueDescjTxtArea);

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Request date", "Request Message", "Uploads", "Receiver", "Status", "Result", "Resolved date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false, true, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Please report your health issue below:");

        submitReqJBtn.setText("Submit Request!");
        submitReqJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitReqJBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Health Report");

        messageJTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageJTxtActionPerformed(evt);
            }
        });

        jLabel4.setText("Issue Message heading:");

        jLabel5.setText("Reports/Related files:");

        backJButton1.setText("<<Back");
        backJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton1ActionPerformed(evt);
            }
        });

        resetJBtn.setText("Reset");
        resetJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetJBtnActionPerformed(evt);
            }
        });

        viewResult.setText("View Result");
        viewResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewResultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 501, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(viewResult)
                                .addGap(31, 31, 31))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(248, 248, 248)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(232, 232, 232)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(submitReqJBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(resetJBtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(messageJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fileNameJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(attachJBtn)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewResult))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileNameJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attachJBtn)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitReqJBtn)
                    .addComponent(resetJBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(backJButton1)
                .addGap(86, 86, 86))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void attachJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attachJBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Open a File");
        //chooser.setFileFilter(new FileTypeFilter(".txt","Text File"));
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        if (f != null) {
            String fileName = f.getAbsolutePath();
            fileNameJTxt.setText(fileName);
            fileList.add(f);
        }

       // System.err.println("fileList......." + fileList);
    }//GEN-LAST:event_attachJBtnActionPerformed

    private void submitReqJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitReqJBtnActionPerformed
        // TODO add your handling code here:
        PersonalHealthIssueWorkRequest newRequest = new PersonalHealthIssueWorkRequest();
        if (!issueDescjTxtArea.getText().isEmpty() && !messageJTxt.getText().isEmpty()) {

            newRequest.setMessage(messageJTxt.getText());
            newRequest.setUploadList(fileList);
            newRequest.setIssueDetails(issueDescjTxtArea.getText());
            newRequest.setSender(account);
            newRequest.setRequestDate(new Date());
            newRequest.setStatus("Sent");
            newRequest.setResolveDate(null);
            newRequest.setCheckedNotification(false);
            if (account.getPerson().getPatient() != null && account.getPerson().getPatient().getVitalHistory() != null && account.getPerson().getPatient().getVitalHistory().getVitalHistory().size()>0) {
                VitalSignHistory vsh = account.getPerson().getPatient().getVitalHistory();
                VitalSignInfo lastVitalInfo = vsh.getVitalHistory().get(vsh.getVitalHistory().size() - 1);
                newRequest.setLatestVital(lastVitalInfo);
            }
            Organization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof DoctorOrganization) {
                    org = organization;
                    break;
                }
            }

            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(newRequest);
                account.getWorkQueue().getWorkRequestList().add(newRequest);
            }
            JOptionPane.showMessageDialog(null, "Successfully added request!");
        } else {
            JOptionPane.showMessageDialog(null, "Atleast short message is manadatory!");
        }
        populateRequestTable();
        resetFields();
    }//GEN-LAST:event_submitReqJBtnActionPerformed

    public void resetFields() {
        messageJTxt.setText("");
        issueDescjTxtArea.setText("");
        fileNameJTxt.setText("");
    }
    private void backJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton1ActionPerformed

    private void resetJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetJBtnActionPerformed
        // TODO add your handling code here:
        resetFields();
        for (File f : fileList) {
            fileList.remove(f);
        }
    }//GEN-LAST:event_resetJBtnActionPerformed

    private void viewResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewResultActionPerformed
        // TODO add your handling code here:

        if (workRequestJTable.getSelectedRow() > -1) {
            DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
            WorkRequest workReq = (WorkRequest) model.getValueAt(workRequestJTable.getSelectedRow(), 0);
            ViewHealthReqResultJPanel viewHealthReqResultJPanel = new ViewHealthReqResultJPanel(userProcessContainer, (PersonalHealthIssueWorkRequest) workReq);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("viewHealthReqResultJPanel", viewHealthReqResultJPanel);
            layout.next(userProcessContainer);
        }else{
            JOptionPane.showMessageDialog(null , "Please select record first");
        }
    }//GEN-LAST:event_viewResultActionPerformed

    private void messageJTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageJTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageJTxtActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attachJBtn;
    private javax.swing.JButton backJButton1;
    private javax.swing.JTextField fileNameJTxt;
    private javax.swing.JTextArea issueDescjTxtArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField messageJTxt;
    private javax.swing.JButton resetJBtn;
    private javax.swing.JButton submitReqJBtn;
    private javax.swing.JButton viewResult;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
