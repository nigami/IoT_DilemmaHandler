/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.moodSwings;

import business.Enterprise.Enterprise;
import business.Organization.Community.DoctorOrganization;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import business.ecosystem.Ecosystem;
import business.person.Person;
import business.person.PersonDirectory;
import business.utils.AddressConverter;
import java.awt.CardLayout;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import sun.audio.*;
import userInterface.badMoodDay.DepressedWorkAreaJPanel;
import userInterface.doctor.sendSMS;
import userInterface.healthCare.HealthRecordWorkAreaJPanel;

/**
 *
 * @author ilanigam17
 */
public class MoodSwingsWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount acc;
    private Ecosystem ecosystem;
    private Enterprise enterprise;

    /**
     * Creates new form MoodSwingsWorkAreaJPanel
     */
    public MoodSwingsWorkAreaJPanel(JPanel userProcessContainer, UserAccount acc, Enterprise enterprise, Ecosystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.acc = acc;
        this.ecosystem = ecosystem;
        this.enterprise = enterprise;
        happyUnhappyJPanel.setVisible(true);
        happyJPanel.setVisible(false);
        unhappyJPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerLabel = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        happyJPanel = new javax.swing.JPanel();
        feelGoodJLabel = new javax.swing.JLabel();
        unhappyJPanel = new javax.swing.JPanel();
        sickLbl = new javax.swing.JLabel();
        disappointmentLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        backJBtn1 = new javax.swing.JButton();
        happyUnhappyJPanel = new javax.swing.JPanel();
        unhappyJLbl = new javax.swing.JLabel();
        happJLbl = new javax.swing.JLabel();
        backJBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 153, 51));

        headerLabel.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        headerLabel.setForeground(new java.awt.Color(0, 0, 204));
        headerLabel.setText("How are you feeling today??");

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        happyJPanel.setBackground(new java.awt.Color(51, 51, 255));

        feelGoodJLabel.setBackground(new java.awt.Color(255, 255, 255));
        feelGoodJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/login - Copy.jpg"))); // NOI18N

        javax.swing.GroupLayout happyJPanelLayout = new javax.swing.GroupLayout(happyJPanel);
        happyJPanel.setLayout(happyJPanelLayout);
        happyJPanelLayout.setHorizontalGroup(
            happyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(feelGoodJLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1362, Short.MAX_VALUE)
        );
        happyJPanelLayout.setVerticalGroup(
            happyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(happyJPanelLayout.createSequentialGroup()
                .addComponent(feelGoodJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        unhappyJPanel.setBackground(new java.awt.Color(255, 255, 255));

        sickLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sick-smiley.png"))); // NOI18N
        sickLbl.setText("Sick");
        sickLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sickLblMouseClicked(evt);
            }
        });

        disappointmentLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/disappointed.jpg"))); // NOI18N
        disappointmentLbl.setText("Disappointed");
        disappointmentLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                disappointmentLblMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Click on the emoticon which ressembles with your mood!!!!");

        backJBtn1.setText("<<Back");
        backJBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout unhappyJPanelLayout = new javax.swing.GroupLayout(unhappyJPanel);
        unhappyJPanel.setLayout(unhappyJPanelLayout);
        unhappyJPanelLayout.setHorizontalGroup(
            unhappyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(unhappyJPanelLayout.createSequentialGroup()
                .addGroup(unhappyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(unhappyJPanelLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(sickLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(237, 237, 237)
                        .addComponent(disappointmentLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(unhappyJPanelLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(backJBtn1))
                    .addGroup(unhappyJPanelLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(500, Short.MAX_VALUE))
        );
        unhappyJPanelLayout.setVerticalGroup(
            unhappyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(unhappyJPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(unhappyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sickLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(disappointmentLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                .addComponent(backJBtn1)
                .addGap(76, 76, 76))
        );

        happyUnhappyJPanel.setBackground(new java.awt.Color(255, 255, 255));

        unhappyJLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/noGood.jpg"))); // NOI18N
        unhappyJLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unhappyJLblMouseClicked(evt);
            }
        });

        happJLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/feelgood.png"))); // NOI18N
        happJLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                happJLblMouseClicked(evt);
            }
        });

        backJBtn.setText("<<Back");
        backJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout happyUnhappyJPanelLayout = new javax.swing.GroupLayout(happyUnhappyJPanel);
        happyUnhappyJPanel.setLayout(happyUnhappyJPanelLayout);
        happyUnhappyJPanelLayout.setHorizontalGroup(
            happyUnhappyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(happyUnhappyJPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(happyUnhappyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backJBtn)
                    .addGroup(happyUnhappyJPanelLayout.createSequentialGroup()
                        .addComponent(happJLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150)
                        .addComponent(unhappyJLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(590, Short.MAX_VALUE))
        );
        happyUnhappyJPanelLayout.setVerticalGroup(
            happyUnhappyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(happyUnhappyJPanelLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(happyUnhappyJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(happJLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(unhappyJLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 323, Short.MAX_VALUE)
                .addComponent(backJBtn)
                .addGap(57, 57, 57))
        );

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(happyUnhappyJPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(happyJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(unhappyJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(happyUnhappyJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(happyJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(unhappyJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jLayeredPane1.setLayer(happyJPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(unhappyJPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(happyUnhappyJPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(429, 429, 429)
                .addComponent(headerLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLayeredPane1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void happJLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_happJLblMouseClicked
        // TODO add your handling code here:
        happyUnhappyJPanel.setVisible(false);
        happyJPanel.setVisible(true);
        headerLabel.setText("We are glad!! Always Be the same!!");
        unhappyJPanel.setVisible(false);
        InputStream in;
        try {
            in = new FileInputStream(new File("C:\\Users\\ilanigam17\\Downloads\\friendship.wav"));
            AudioStream audios = new AudioStream(in);
            AudioPlayer.player.start(audios);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_happJLblMouseClicked

    private void unhappyJLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unhappyJLblMouseClicked
        // TODO add your handling code here:
        headerLabel.setText("Don't worry! We are here to take care!!");
        happyUnhappyJPanel.setVisible(false);
        happyJPanel.setVisible(false);
        happJLbl.setVisible(false);
        unhappyJPanel.setVisible(true);

    }//GEN-LAST:event_unhappyJLblMouseClicked

    private void backJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJBtnActionPerformed

    private void disappointmentLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disappointmentLblMouseClicked
        // TODO add your handling code here:
        DepressedWorkAreaJPanel depressedWorkAreaJPanel = new DepressedWorkAreaJPanel(userProcessContainer, acc, enterprise, ecosystem);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("depressedWorkAreaJPanel", depressedWorkAreaJPanel);
        layout.next(userProcessContainer);
    }//GEN-LAST:event_disappointmentLblMouseClicked

    private void sickLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sickLblMouseClicked
        // TODO add your handling code here:
        HealthRecordWorkAreaJPanel healthRecordWorkAreaJPanel1 = new HealthRecordWorkAreaJPanel(userProcessContainer, acc, enterprise, ecosystem, true);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("healthRecordWorkAreaJPanel1", healthRecordWorkAreaJPanel1);
        layout.next(userProcessContainer);

        try {
            sendSmsToPatient();
        } catch (Exception ex) {
            System.out.println("ex...."+ex);
        }
    }//GEN-LAST:event_sickLblMouseClicked

    public static HashMap sortByValues(HashMap map) {
        List list = new LinkedList(map.entrySet());
        // Defined Custom Comparator here
        Collections.sort(list, new Comparator() {
            public int compare(Object o1, Object o2) {
                return -((Comparable) ((Map.Entry) (o1)).getValue())
                        .compareTo(((Map.Entry) (o2)).getValue());
            }
        });

        // Here I am copying the sorted list in HashMap
        // using LinkedHashMap to preserve the insertion order
        HashMap sortedHashMap = new LinkedHashMap();
        for (Iterator it = list.iterator(); it.hasNext();) {
            Map.Entry entry = (Map.Entry) it.next();
            sortedHashMap.put(entry.getKey(), entry.getValue());
        }
        return sortedHashMap;
    }

    public static double distance(double lat1, double lat2, double lon1,
            double lon2, double el1, double el2) {

        final int R = 6371; // Radius of the earth

        Double latDistance = Math.toRadians(lat2 - lat1);
        Double lonDistance = Math.toRadians(lon2 - lon1);
        Double a = Math.sin(latDistance / 2) * Math.sin(latDistance / 2)
                + Math.cos(Math.toRadians(lat1)) * Math.cos(Math.toRadians(lat2))
                * Math.sin(lonDistance / 2) * Math.sin(lonDistance / 2);
        Double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        double distance = R * c * 1000; // convert to meters

        double height = el1 - el2;

        distance = Math.pow(distance, 2) + Math.pow(height, 2);

        return Math.sqrt(distance);
    }

    public void sendSmsToPatient() throws IOException {
        getLongandLatiPerson();
        HashMap<Person, Double> hmap = new HashMap<Person, Double>();
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof DoctorOrganization) {
                PersonDirectory personDir = org.getPersonDirectory();

                for (Person doctor : personDir.getPersonList()) {
                    String docAdd1 = doctor.getStAddress() + "," + doctor.getTown() + " " + String.valueOf(doctor.getZipCode());
                    String result = AddressConverter.calculateLongLatitude(docAdd1);
                    int index = result.indexOf(" ");
                    double lati1 = Double.valueOf(result.substring(0, index));
                    double longi1 = Double.valueOf(result.substring(index));

                    String docAdd2 = acc.getPerson().getStAddress() + "," + acc.getPerson().getTown() + " " + String.valueOf(acc.getPerson().getZipCode());
                    String result2 = AddressConverter.calculateLongLatitude(docAdd2);
                    int index2 = result2.indexOf(" ");
                    double lati2 = Double.valueOf(result2.substring(0, index2));
                    double longi2 = Double.valueOf(result2.substring(index2));

                    double dist = distance(lati1, lati2, longi1, longi2, 0, 0);
                    hmap.put(doctor, dist);

                }
            }
        }

        Set set = hmap.entrySet();
      Iterator iterator = set.iterator();
      while(iterator.hasNext()) {
         Map.Entry mentry = (Map.Entry)iterator.next();
       System.out.print("key is: "+ mentry.getKey() + " & Value is: ");
         System.out.println(mentry.getValue());
            
    }
        String message = " ";
        hmap = sortByValues(hmap);

        int i = 1;
        for (Person key : hmap.keySet()) {
          message= message + key.getName()+"\n"+key.getStAddress()+","+key.getTown()+","+key.getZipCode()+"\n\n";
            message = "Nearest doctor" + key.getName();
            if (i == 2) {
                break;
            }
            i++;
        }

        Set set1 = hmap.entrySet();
        Iterator iterator1 = set1.iterator();
        while (iterator1.hasNext()) {
            Map.Entry mentry1 = (Map.Entry) iterator1.next();
            System.out.print("key is: " + mentry1.getKey() + " & Value is: ");
            System.out.println(mentry1.getValue());
        }
        sendSMS.sendMessage("+1" + acc.getPerson().getPhoneNum(), message.trim());

    }

    public static Object getKeyFromValue(Map hm, Object value) {
        for (Object o : hm.keySet()) {
            if (hm.get(o).equals(value)) {
                return o;
            }
        }
        return null;
    }

    public String getLongandLatiPerson() throws IOException {
        String docAdd1 = acc.getPerson().getStAddress() + "," + acc.getPerson().getTown() + " " + String.valueOf(acc.getPerson().getZipCode());
        String result = AddressConverter.calculateLongLatitude(docAdd1);
        int index = result.indexOf(" ");
        return result;
    }

    private void backJBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtn1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJBtn1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJBtn;
    private javax.swing.JButton backJBtn1;
    private javax.swing.JLabel disappointmentLbl;
    private javax.swing.JLabel feelGoodJLabel;
    private javax.swing.JLabel happJLbl;
    private javax.swing.JPanel happyJPanel;
    private javax.swing.JPanel happyUnhappyJPanel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLabel sickLbl;
    private javax.swing.JLabel unhappyJLbl;
    private javax.swing.JPanel unhappyJPanel;
    // End of variables declaration//GEN-END:variables
}
